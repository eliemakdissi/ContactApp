{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victus-pc\\\\project-dipesh\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst contactsCrudContext = createContext();\nexport function ContactsCrudContextProvider({\n  children\n}) {\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) setContacts(response.data);\n  };\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuidv4(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n  const value = {\n    contacts,\n    retrieveContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler\n  };\n  return /*#__PURE__*/React.createElement(contactsCrudContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useState","api","v4","uuidv4","contactsCrudContext","ContactsCrudContextProvider","children","contacts","setContacts","searchTerm","setSearchTerm","retrieveContacts","response","get","data","addContactHandler","contact","console","log","request","id","post","removeContactHandler","delete","newContactList","filter","updateContactHandler","put","map","searchHandler","Object","values","join","toLowerCase","includes","setSearchResults","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useContactsCrud"],"sources":["C:/Users/victus-pc/project-dipesh/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport api from \"../api/contacts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({ children }) {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const retrieveContacts = async () => {\r\n    const response = await api.get(\"/contacts\");\r\n    if (response.data) setContacts(response.data);\r\n  };\r\n\r\n  const addContactHandler = async (contact) => {\r\n    console.log(contact);\r\n    const request = { id: uuidv4(), ...contact };\r\n    const response = await api.post(\"/contacts\", request);\r\n    console.log(response);\r\n    setContacts([...contacts, response.data]);\r\n  };\r\n\r\n  const removeContactHandler = async (id) => {\r\n    await api.delete(`/contacts/${id}`);\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  const updateContactHandler = async (contact) => {\r\n    const response = await api.put(`/contacts/${contact.id}`, contact);\r\n    const { id } = response.data;\r\n\r\n    setContacts(\r\n      contacts.map((contact) => {\r\n        return contact.id === id ? { ...response.data } : contact;\r\n      })\r\n    );\r\n  };\r\n\r\n  const searchHandler = (searchTerm) => {\r\n    setSearchTerm(searchTerm);\r\n    if (searchTerm !== \"\") {\r\n      const newContactList = contacts.filter((contact) => {\r\n        return Object.values(contact)\r\n          .join(\" \")\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase());\r\n      });\r\n      setSearchResults(newContactList);\r\n    } else {\r\n      setSearchResults(contacts);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    contacts,\r\n    retrieveContacts,\r\n    addContactHandler,\r\n    removeContactHandler,\r\n    updateContactHandler,\r\n  };\r\n  return (\r\n    <contactsCrudContext.Provider value={value}>\r\n      {children}\r\n    </contactsCrudContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useContactsCrud() {\r\n  return useContext(contactsCrudContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}