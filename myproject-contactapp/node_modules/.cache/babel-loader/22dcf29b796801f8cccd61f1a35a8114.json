{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victus-pc\\\\myproject-ete\\\\myproject-contactapp\\\\src\\\\context\\\\ContactsCrudContext.js\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nimport { deleteObject } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nconst contactsCrudContext = createContext();\nexport function ContactsCrudContextProvider({\n  children\n}) {\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/users\");\n    if (response.data) setContacts(response.data);\n  };\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      ...contact\n    };\n    const response = await api.post(\"/users\", request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n  const removeContactHandler = async (_id, firebasepath) => {\n    await api.delete(`/users/${_id}`);\n    await d;\n    const newContactList = contacts.filter(contact => {\n      return contact._id !== _id;\n    });\n    setContacts(newContactList);\n  };\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/users/${contact._id}`, contact);\n    const {\n      _id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact._id === _id ? {\n        ...response.data\n      } : contact;\n    }));\n  };\n  const searchHandler = searchTerm1 => {\n    setSearchTerm(searchTerm1);\n    if (searchTerm1 !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        let contactCopy = {\n          ...contact\n        };\n        delete contactCopy.id;\n        return Object.values(contactCopy).join(\" \").toLowerCase().includes(searchTerm1.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n  const value = {\n    contacts,\n    retrieveContacts,\n    addContactHandler,\n    removeContactHandler,\n    updateContactHandler,\n    searchTerm,\n    searchResults,\n    searchHandler\n  };\n  return /*#__PURE__*/React.createElement(contactsCrudContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useState","api","deleteObject","storage","contactsCrudContext","ContactsCrudContextProvider","children","contacts","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","contact","console","log","request","post","removeContactHandler","_id","firebasepath","delete","d","newContactList","filter","updateContactHandler","put","map","searchHandler","searchTerm1","contactCopy","id","Object","values","join","toLowerCase","includes","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useContactsCrud"],"sources":["C:/Users/victus-pc/myproject-ete/myproject-contactapp/src/context/ContactsCrudContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport api from \"../api/contacts\";\r\nimport { deleteObject } from \"firebase/storage\";\r\nimport { storage } from \"../firebase\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({ children }) {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const retrieveContacts = async () => {\r\n    const response = await api.get(\"/users\");\r\n    if (response.data) setContacts(response.data);\r\n  };\r\n\r\n  const addContactHandler = async (contact) => {\r\n    console.log(contact);\r\n    const request = { ...contact };\r\n    const response = await api.post(\"/users\", request);\r\n    console.log(response);\r\n    setContacts([...contacts, response.data]);\r\n  };\r\n\r\n  const removeContactHandler = async (_id, firebasepath) => {\r\n    await api.delete(`/users/${_id}`);\r\n    await d;\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact._id !== _id;\r\n    });\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  const updateContactHandler = async (contact) => {\r\n    const response = await api.put(`/users/${contact._id}`, contact);\r\n    const { _id } = response.data;\r\n\r\n    setContacts(\r\n      contacts.map((contact) => {\r\n        return contact._id === _id ? { ...response.data } : contact;\r\n      })\r\n    );\r\n  };\r\n\r\n  const searchHandler = (searchTerm1) => {\r\n    setSearchTerm(searchTerm1);\r\n    if (searchTerm1 !== \"\") {\r\n      const newContactList = contacts.filter((contact) => {\r\n        let contactCopy = { ...contact };\r\n        delete contactCopy.id;\r\n\r\n        return Object.values(contactCopy)\r\n          .join(\" \")\r\n          .toLowerCase()\r\n          .includes(searchTerm1.toLowerCase());\r\n      });\r\n      setSearchResults(newContactList);\r\n    } else {\r\n      setSearchResults(contacts);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    contacts,\r\n    retrieveContacts,\r\n    addContactHandler,\r\n    removeContactHandler,\r\n    updateContactHandler,\r\n    searchTerm,\r\n    searchResults,\r\n    searchHandler,\r\n  };\r\n  return (\r\n    <contactsCrudContext.Provider value={value}>\r\n      {children}\r\n    </contactsCrudContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useContactsCrud() {\r\n  return useContext(contactsCrudContext);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}