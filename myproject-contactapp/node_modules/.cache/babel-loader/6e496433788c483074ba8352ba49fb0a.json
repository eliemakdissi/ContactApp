{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victus-pc\\\\project-dipesh\\\\contact-app\\\\src\\\\context\\\\ContactsCrudContext.js\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport api from \"../api/contacts\";\nconst contactsCrudContext = createContext();\nexport function ContactsCrudContextProvider({\n  children\n}) {\n  const [contacts, setContacts] = useState([]);\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) setContacts(response.data);\n  };\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n  const value = {\n    contacts,\n    retrieveContacts,\n    removeContactHandler\n  };\n  return /*#__PURE__*/React.createElement(contactsCrudContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useContactsCrud() {\n  return useContext(contactsCrudContext);\n}","map":{"version":3,"names":["React","createContext","useContext","useState","api","contactsCrudContext","ContactsCrudContextProvider","children","contacts","setContacts","retrieveContacts","response","get","data","removeContactHandler","id","delete","newContactList","filter","contact","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useContactsCrud"],"sources":["C:/Users/victus-pc/project-dipesh/contact-app/src/context/ContactsCrudContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport api from \"../api/contacts\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({ children }) {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const retrieveContacts = async () => {\r\n    const response = await api.get(\"/contacts\");\r\n    if (response.data) setContacts(response.data);\r\n  };\r\n\r\n  const removeContactHandler = async (id) => {\r\n    await api.delete(`/contacts/${id}`);\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  const value = {\r\n    contacts,\r\n    retrieveContacts,\r\n    removeContactHandler,\r\n  };\r\n  return (\r\n    <contactsCrudContext.Provider value={value}>\r\n      {children}\r\n    </contactsCrudContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useContactsCrud() {\r\n  return useContext(contactsCrudContext);\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,mBAAmB,GAAGJ,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASK,2BAA2BA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,WAAW,CAAC;IAC3C,IAAID,QAAQ,CAACE,IAAI,EAAEJ,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC/C,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAOC,EAAE,IAAK;IACzC,MAAMX,GAAG,CAACY,MAAM,CAAC,aAAaD,EAAE,EAAE,CAAC;IACnC,MAAME,cAAc,GAAGT,QAAQ,CAACU,MAAM,CAAEC,OAAO,IAAK;MAClD,OAAOA,OAAO,CAACJ,EAAE,KAAKA,EAAE;IAC1B,CAAC,CAAC;IACFN,WAAW,CAACQ,cAAc,CAAC;EAC7B,CAAC;EAED,MAAMG,KAAK,GAAG;IACZZ,QAAQ;IACRE,gBAAgB;IAChBI;EACF,CAAC;EACD,oBACEd,KAAA,CAAAqB,aAAA,CAAChB,mBAAmB,CAACiB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxCrB,QAC2B,CAAC;AAEnC;AAEA,OAAO,SAASsB,eAAeA,CAAA,EAAG;EAChC,OAAO3B,UAAU,CAACG,mBAAmB,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module"}